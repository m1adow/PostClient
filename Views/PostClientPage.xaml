<Page
    x:Class="PostClient.PostClientPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:PostClient"
    xmlns:ineractivity="using:Microsoft.Xaml.Interactivity"
    xmlns:core="using:Microsoft.Xaml.Interactions.Core"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:vm="using:PostClient.ViewModels"
    xmlns:uc="using:PostClient.Views.Controls"
    mc:Ignorable="d"
    Background="#67595E">
    <Page.Resources>
        <vm:PostClientViewModel x:Key="viewModel"/>
        <Storyboard x:Name="StoryboardLoading">
            <ColorAnimationUsingKeyFrames Storyboard.TargetName="listViewMessages" Storyboard.TargetProperty="(Control.Background).(SolidColorBrush.Color)">
                <EasingColorKeyFrame KeyTime="00:00:00" Value="#EED6D3"/>
                <EasingColorKeyFrame KeyTime="00:00:01" Value="#E8B4B8"/>
                <EasingColorKeyFrame KeyTime="00:00:02" Value="#EED6D3"/>
            </ColorAnimationUsingKeyFrames>
        </Storyboard>
    </Page.Resources>
    <ineractivity:Interaction.Behaviors>
        <core:EventTriggerBehavior EventName="Loaded">
            <core:InvokeCommandAction Command="{Binding Source={StaticResource viewModel}, Path=LoadedHandlerCommand}"
                                      CommandParameter="AllMessages"/>
        </core:EventTriggerBehavior>
    </ineractivity:Interaction.Behaviors>
    <Grid DataContext="{StaticResource viewModel}">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="2*"/>
            <ColumnDefinition Width="4*"/>
            <ColumnDefinition Width="6*"/>
        </Grid.ColumnDefinitions>
        <StackPanel Margin="10"
                    Grid.Column="0">
            <Button x:Uid="ButtonLogin"
                    Command="{Binding LoginViewModel.ShowLoginControlsCommand}"
                    Visibility="{Binding LoginViewModel.ManagmentButtonsVisibility}"/>
            <Button x:Uid="ButtonNewMail"
                    Command="{Binding SendMessageViewModel.ShowSendingControlsCommand}"
                    Visibility="{Binding LoginViewModel.ManagmentButtonsVisibility}">
                <ineractivity:Interaction.Behaviors>
                    <core:EventTriggerBehavior EventName="Click">
                        <core:InvokeCommandAction Command="{Binding ControlMessageViewModel.HideMessageViewCommand}"/>
                    </core:EventTriggerBehavior>
                </ineractivity:Interaction.Behaviors>
            </Button>
            <TextBlock x:Uid="TextBlockFolders"
                       Visibility="{Binding LoginViewModel.ManagmentButtonsVisibility}"/>
            <Button x:Uid="ButtonInbox"
                    Margin="10,5,0,0"
                    HorizontalAlignment="Left"
                    Width="80"
                    Height="40"
                    Visibility="{Binding LoginViewModel.ManagmentButtonsVisibility}"
                    Command="{Binding LoadMessagesViewModel.LoadMessagesFromLocalStorageCommand}"
                    CommandParameter="AllMessages"/>
            <Button x:Uid="ButtonSentMail"
                    Margin="10,5,0,0"
                    HorizontalAlignment="Left"
                    Width="80"
                    Height="40"
                    Visibility="{Binding LoginViewModel.ManagmentButtonsVisibility}"
                    Command="{Binding LoadMessagesViewModel.LoadMessagesFromLocalStorageCommand}"
                    CommandParameter="SentMessages"/>
            <Button x:Uid="ButtonFlagged"
                    Margin="10,5,0,0"
                    HorizontalAlignment="Left"
                    Width="80"
                    Height="40"
                    Visibility="{Binding LoginViewModel.ManagmentButtonsVisibility}"
                    Command="{Binding LoadMessagesViewModel.LoadMessagesFromLocalStorageCommand}"
                    CommandParameter="FlaggedMessages"/>
            <Button x:Uid="ButtonDrafts"
                    Margin="10,5,0,0"
                    HorizontalAlignment="Left"
                    Width="80"
                    Height="40"
                    Visibility="{Binding LoginViewModel.ManagmentButtonsVisibility}"
                    Command="{Binding LoadMessagesViewModel.LoadMessagesFromLocalStorageCommand}"
                    CommandParameter="DraftMessages"/>
            <TextBlock x:Uid="TextBlockLogin"
                       Margin="0,10,0,0"
                       Visibility="{Binding LoginViewModel.LoginControlsVisibility}"/>
            <TextBox Visibility="{Binding LoginViewModel.LoginControlsVisibility}"
                     Text="{Binding LoginViewModel.Email, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
            <TextBlock x:Uid="TextBlockPassword"
                       Visibility="{Binding LoginViewModel.LoginControlsVisibility}"/>
            <PasswordBox Visibility="{Binding LoginViewModel.LoginControlsVisibility}"
                         Password="{Binding LoginViewModel.Password, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
            <CheckBox x:Uid="CheckBoxRememberMe"
                      Visibility="{Binding LoginViewModel.LoginControlsVisibility}"
                      IsChecked="{Binding LoginViewModel.IsRememberMeChecked, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
            <TextBlock x:Uid="TextBlockService"
                       Visibility="{Binding LoginViewModel.LoginControlsVisibility}"/>
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <RadioButton Grid.Column="0"
                             x:Uid="RadioButtonGmail"
                             IsChecked="{Binding LoginViewModel.IsGmailRadioButtonChecked, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                             Visibility="{Binding LoginViewModel.LoginControlsVisibility}"/>
                <RadioButton Grid.Column="1" 
                             x:Uid="RadioButtonOutlook"
                             IsChecked="{Binding LoginViewModel.IsOutlookRadioButtonChecked, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                             Visibility="{Binding LoginViewModel.LoginControlsVisibility}"/>
            </Grid>
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Button Grid.Column="0"
                        Margin="5"
                        x:Uid="ButtonOK"
                        Command="{Binding LoginViewModel.LoginCommand}"
                        CommandParameter="{Binding ElementName=StoryboardLoading}"
                        Visibility="{Binding LoginViewModel.LoginControlsVisibility}"/>
                <Button Grid.Column="1"
                        Margin="5"
                        x:Uid="ButtonCancel"
                        Command="{Binding LoginViewModel.CancelLoginControlsCommand}"
                        Visibility="{Binding LoginViewModel.LoginControlsVisibility}"/>
            </Grid>
        </StackPanel>
        <Grid Grid.Column="1">
            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
                <RowDefinition Height="10*"/>
            </Grid.RowDefinitions>
            <Grid Grid.Row="0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="3*"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <StackPanel Grid.Column="0"
                            Margin="10,0,0,0">
                    <TextBlock x:Uid="TextBlockSearch"
                               Visibility="{Binding LoginViewModel.ManagmentButtonsVisibility}"/>
                    <TextBox Text="{Binding LoadMessagesViewModel.SearchText, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                             Visibility="{Binding LoginViewModel.ManagmentButtonsVisibility}">
                        <ineractivity:Interaction.Behaviors>
                            <core:EventTriggerBehavior EventName="TextChanged">
                                <core:InvokeCommandAction Command="{Binding LoadMessagesViewModel.SearchMessageCommand}"/>
                            </core:EventTriggerBehavior>
                        </ineractivity:Interaction.Behaviors>
                    </TextBox>
                </StackPanel>
                <Button Grid.Column="1"
                        x:Uid="ButtonSync"
                        Command="{Binding LoadMessagesViewModel.LoadMessagesFromServerCommand}"
                        CommandParameter="{Binding ElementName=StoryboardLoading}"
                        Visibility="{Binding LoginViewModel.ManagmentButtonsVisibility}"/>
                <DropDownButton Grid.Column="2"
                                x:Uid="DropDownButtonSort"
                                Visibility="{Binding LoginViewModel.ManagmentButtonsVisibility}"
                                HorizontalAlignment="Center">
                    <DropDownButton.Flyout>
                        <MenuFlyout Placement="Bottom">
                            <MenuFlyoutItem x:Uid="MenuFlyoutItemA-Z"
                                                Command="{Binding LoadMessagesViewModel.SortMessagesCommand}"
                                                CommandParameter="a-z"/>
                            <MenuFlyoutItem x:Uid="MenuFlyoutItemZ-A"
                                                Command="{Binding LoadMessagesViewModel.SortMessagesCommand}"
                                                CommandParameter="z-a"/>
                            <MenuFlyoutItem x:Uid="MenuFlyoutItemNewer"
                                                Command="{Binding LoadMessagesViewModel.SortMessagesCommand}"
                                                CommandParameter="newer"/>
                            <MenuFlyoutItem x:Uid="MenuFlyoutItemOlder"
                                                Command="{Binding LoadMessagesViewModel.SortMessagesCommand}"
                                                CommandParameter="older"/>
                        </MenuFlyout>
                    </DropDownButton.Flyout>
                </DropDownButton>
            </Grid>
            <ListView x:Name="listViewMessages" 
                      CanDragItems="True"
                      CanReorderItems="True"
                      AllowDrop="True"
                      Margin="10"
                      Visibility="{Binding LoginViewModel.ManagmentButtonsVisibility}"
                      ItemsSource="{Binding LoadMessagesViewModel.Messages, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                      Grid.Row="1">
                <ineractivity:Interaction.Behaviors>
                    <core:EventTriggerBehavior EventName="SelectionChanged">
                        <core:InvokeCommandAction Command="{Binding SendMessageViewModel.HideSendingControlsCommand}"/>
                    </core:EventTriggerBehavior>
                </ineractivity:Interaction.Behaviors>
                <ListView.ItemTemplate>
                    <DataTemplate>
                        <uc:MailMessageControl Id="{Binding Uid}"
                                               Subject="{Binding Subject}"
                                               Date="{Binding Date}"
                                               From="{Binding From}"
                                               FlagCommand="{Binding Source={StaticResource viewModel}, Path=ControlMessageViewModel.FlagMessageCommand}"
                                               DeleteCommand="{Binding Source={StaticResource viewModel}, Path=ControlMessageViewModel.DeleteMessageCommand}">
                            <ineractivity:Interaction.Behaviors>
                                <core:EventTriggerBehavior EventName="PointerEntered">
                                    <core:InvokeCommandAction Command="{Binding Source={StaticResource viewModel}, Path=ControlMessageViewModel.ChangeSelectedMessageCommand}"
                                                              CommandParameter="{Binding}"/>
                                </core:EventTriggerBehavior>
                                <core:EventTriggerBehavior EventName="Tapped">
                                    <core:InvokeCommandAction Command="{Binding Source={StaticResource viewModel}, Path=ControlMessageViewModel.ChangeToTappedStateCommand}"
                                                              CommandParameter="{Binding}"/>
                                </core:EventTriggerBehavior>
                            </ineractivity:Interaction.Behaviors>
                        </uc:MailMessageControl>
                    </DataTemplate>
                </ListView.ItemTemplate>
            </ListView>
        </Grid>
        <Grid Grid.Column="2">
            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
                <RowDefinition Height="10*"/>
            </Grid.RowDefinitions>
            <Grid Grid.Row="0"
                  Background="#A49393">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Button x:Uid="ButtonFlag"
                        Grid.Column="0"
                        Command="{Binding ControlMessageViewModel.FlagMessageCommand}"
                        Visibility="{Binding ControlMessageViewModel.MessageViewConrtolVisibility}"/>
                <Button x:Uid="ButtonDelete"
                        Grid.Column="1"
                        Command="{Binding ControlMessageViewModel.DeleteMessageCommand}"
                        Visibility="{Binding ControlMessageViewModel.MessageViewConrtolVisibility}"/>
                <Button Content="X"
                        Grid.Column="2"
                        Background="red"
                        Command="{Binding ControlMessageViewModel.CloseMessageCommand}"
                        Visibility="{Binding ControlMessageViewModel.MessageViewConrtolVisibility}"/>
            </Grid>
            <uc:MessageBodyControl MessageBody="{Binding ControlMessageViewModel.StableMailMessage.Body}"
                                   Attachments="{Binding ControlMessageViewModel.StableMailMessage.Attachments}"
                                   Visibility="{Binding ControlMessageViewModel.MessageViewConrtolVisibility}"
                                   Grid.Row="1"
                                   Margin="10"/>
            <Grid Grid.Row="1"
                  Visibility="{Binding SendMessageViewModel.SendMessageControlsVisibility}">
                <Grid.RowDefinitions>
                    <RowDefinition Height="1.7*"/>
                    <RowDefinition Height="0.4*"/>
                    <RowDefinition Height="2*"/>
                    <RowDefinition Height="0.5*"/>
                </Grid.RowDefinitions>
                <Grid Grid.Row="0">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="1.5*"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <Grid Grid.Row="0">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="8*"/>
                        </Grid.ColumnDefinitions>
                        <TextBlock x:Uid="TextBlockFrom"
                                   Margin="10,0,0,0"
                                   Grid.Column="0"
                                   Grid.Row="0"/>
                        <TextBox Margin="5,0,5,0"
                                 Grid.Column="1"
                                 Grid.Row="0"
                                 Text="{Binding SendMessageViewModel.MessageSender}"/>
                        <TextBlock x:Uid="TextBlockTo"
                                   Margin="10,0,0,0"
                                   Grid.Column="0"
                                   Grid.Row="1"/>
                        <Grid Grid.Row="1"
                              Grid.Column="1">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="3*"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <TextBox Margin="5,0,5,0"
                                     Grid.Column="0"
                                     Text="{Binding SendMessageViewModel.MessageReciever, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                            <Button Grid.Column="1"
                                    x:Uid="ButtonContact"
                                    Command="{Binding SendMessageViewModel.ChooseContactCommand}"/>
                        </Grid>
                    </Grid>
                    <Grid Grid.Row="1">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <StackPanel Grid.Column="0">
                            <TextBlock Margin="10,0,0,0"
                                       x:Uid="TextBlockName"/>
                            <TextBox Margin="5"
                                     Text="{Binding SendMessageViewModel.MessageName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                        </StackPanel>
                        <StackPanel Grid.Column="1">
                            <TextBlock Margin="10,0,0,0"
                                       x:Uid="TextBlockSubject"/>
                            <TextBox Margin="5"
                                     Text="{Binding SendMessageViewModel.MessageSubject, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                        </StackPanel>
                    </Grid>
                </Grid>
                <TextBlock x:Uid="TextBlockMessage"
                           Grid.Row="1"
                           Margin="10,0,0,0"/>
                <Grid Grid.Row="2">
                    <Grid.RowDefinitions>
                        <RowDefinition/>
                        <RowDefinition Height="320"/>
                    </Grid.RowDefinitions>
                    <Grid Grid.Row="0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="2*"/>
                            <ColumnDefinition Width="2*"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Button x:Uid="ButtonInsert"
                                Grid.Column="0"
                                Command="{Binding SendMessageViewModel.InsertFileCommand}"
                                CommandParameter="{Binding ElementName=filesComboBox}"/>
                        <ComboBox x:Name="filesComboBox"
                                  Grid.Column="1"
                                  HorizontalAlignment="Stretch"
                                  VerticalAlignment="Center">

                        </ComboBox>
                        <Grid Grid.Column="2">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Button Grid.Column="0"
                                    Content="B"
                                    FontWeight="Bold"
                                    Command="{Binding SendMessageViewModel.StyleSelectedTextCommand}"
                                    CommandParameter="b"/>
                            <Button Grid.Column="1"
                                    Content="I"
                                    FontStyle="Italic"
                                    Command="{Binding SendMessageViewModel.StyleSelectedTextCommand}"
                                    CommandParameter="i"/>
                            <Button Grid.Column="2"
                                    Content="U"
                                    Command="{Binding SendMessageViewModel.StyleSelectedTextCommand}"
                                    CommandParameter="u"/>
                            <Button Grid.Column="3"
                                    Content="+"
                                    Command="{Binding SendMessageViewModel.AddLineCommand}"/>
                        </Grid>
                    </Grid>
                    <TextBox Margin="5,0,5,0"
                             Grid.Row="1"
                             TextWrapping="Wrap"
                             HorizontalAlignment="Stretch"
                             VerticalAlignment="Stretch"  
                             SelectedText="{Binding SendMessageViewModel.SelectedText, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                             Text="{Binding SendMessageViewModel.MessageBody, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                    </TextBox>
                </Grid>
                <Grid Grid.Row="3">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <Button x:Uid="ButtonCancel"
                            Grid.Column="0"
                            Margin="5"
                            HorizontalAlignment="Left"
                            Command="{Binding SendMessageViewModel.CancelSendingMessageCommand}"
                            CommandParameter="{Binding ElementName=filesComboBox}"/>
                    <Button x:Uid="ButtonDraft"
                            Grid.Column="1"
                            Margin="5"
                            HorizontalAlignment="Center"
                            Command="{Binding SendMessageViewModel.DraftMessageCommand}"
                            CommandParameter="{Binding ElementName=filesComboBox}"/>
                    <Button x:Uid="ButtonSend"
                            Grid.Column="2"
                            Margin="5"
                            HorizontalAlignment="Right"
                            Command="{Binding SendMessageViewModel.SendMessageCommand}"
                            CommandParameter="{Binding ElementName=filesComboBox}"/>
                </Grid>
            </Grid>
        </Grid>
    </Grid>
</Page>
